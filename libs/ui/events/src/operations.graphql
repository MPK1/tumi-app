query loadEvent($id: ID!) {
  currentUser {
    id
    hasESNcard
  }
  event(eventId: $id) {
    id
    title
    icon
    start
    end
    registrationStart
    publicationState
    description
    organizerText
    participantText
    registrationMode
    registrationLink
    freeParticipantSpots
    prices
    location
    coordinates
    createdBy {
      id
      fullName
    }
    submissionItems {
      id
      name
      submissionTime
      instruction
      required
      type
    }
    organizer {
      id
      link
      text
    }
    activeRegistration {
      id
      didAttend
      #      openMoveOrders {
      #        id
      #      }
      user {
        id
        fullName
      }
    }
    organizerSignup
    participantSignup
    organizerRegistrationPossible
    participantRegistrationPossible
    userRegistered
    userIsOrganizer
    participantLimit
    participantsRegistered
    couldBeOrganizer
    couldBeParticipant
    organizers {
      id
      fullName
      phone
    }
  }
}

query loadRegistrationForMove($registrationId: ID!) {
  registration(id: $registrationId) {
    id
    eventId
    deletingCode {
      id
    }
  }
}

mutation createEventRegistrationCode(
  $eventId: ID!
  $registrationId: ID
  $isPublic: Boolean
) {
  createRegistrationCode(
    eventId: $eventId
    registrationId: $registrationId
    isPublic: $isPublic
  ) {
    id
  }
}

#mutation createMoveOrder($eventId: ID!) {
#  createRegistrationMoveOrder(id: $eventId) {
#    id
#    openMoveOrders {
#      id
#    }
#  }
#}

#query getMoveOrder($orderId: ID!) {
#  moveOrder(id: $orderId) {
#    id
#    registration {
#      id
#      event {
#        title
#        price
#      }
#    }
#  }
#}

query loadEventForRunning($id: ID!) {
  event(eventId: $id) {
    id
    title
    icon
    start
    end
    participantLimit
    participantsRegistered
    participantsAttended
    organizerRegistrations {
      id
      checkInTime
      user {
        id
        fullName
        phone
        picture
        email
      }
    }
    costItems(hideOnInvoice: true) {
      id
      amount
      actualAmount
      submittedAmount
      name
      receipts {
        id
      }
    }
    participantRegistrations {
      id
      checkInTime
      payment {
        id
        status
      }
      user {
        id
        fullName
        phone
        picture
        email
      }
    }
  }
}

query getCostItem($id: ID!) {
  costItem(id: $id) {
    id
    name
    amount
    submittedAmount
    event {
      id
      title
    }
    receipts {
      id
      amount
      url
      user {
        id
        fullName
      }
    }
  }
}

query getBlobToken {
  blobUploadKey
}

mutation addReceipt($costItemId: ID!, $receiptInput: CreateReceiptInput!) {
  addReceiptToCostItem(costItemId: $costItemId, receiptInput: $receiptInput) {
    id
    receipts {
      id
      amount
      url
    }
  }
}

mutation deleteReceipt($costItemId: ID!, $receiptId: ID!) {
  deleteReceipt(costItemId: $costItemId, receiptId: $receiptId) {
    id
    receipts {
      id
    }
  }
}

query getRegistration($id: ID!) {
  registration(id: $id) {
    id
    payment {
      id
      status
    }
    type
    didAttend
    checkInTime
    event {
      id
      title
      icon
    }
    user {
      id
      fullName
      picture
    }
  }
}

mutation checkInUser($id: ID!, $manual: Boolean) {
  checkInUser(id: $id, manualCheckin: $manual) {
    id
    checkInTime
    didAttend
  }
}

query loadEventForManagement($id: ID!) {
  event(eventId: $id) {
    id
    title
    icon
    start
    #financial
    #    amountCollected
    #    netAmountCollected
    #    feesPaid
    participantLimit
    participantsRegistered
    participantsAttended
    #registrations
    organizerRegistrations {
      id
      createdAt
      #      paymentStatus
      user {
        id
        fullName
        picture
        email
      }
    }
    participantRegistrations {
      id
      createdAt
      #      paymentStatus
      #      paymentIntentId
      #      netPaid
      payment {
        id
        status
        paymentMethodType
        netAmount
      }
      checkInTime
      didAttend
      submissions {
        id
        data
        submissionItem {
          id
          name
        }
      }
      user {
        id
        fullName
        picture
        email
        phone
      }
    }
  }
}

query GetUserPaymentStatus {
  currentUser {
    id
    currentTenant {
      userId
      tenantId
      stripeData {
        id
        paymentMethodId
      }
    }
  }
}

mutation registerWithStripePayment($eventId: ID!, $submissions: Json) {
  registerWithStripe(id: $eventId, submissions: $submissions) {
    id
    status
    client_secret
  }
}

mutation deregisterWithRefund($eventId: ID!, $userId: ID) {
  deregisterUserWithRefund(userId: $userId, eventId: $eventId) {
    id
    participantRegistrationPossible
    userRegistered
    participantLimit
    participantsRegistered
    couldBeParticipant
  }
}

mutation deregisterFromEvent($registrationId: ID!) {
  deregisterFromEvent(registrationId: $registrationId) {
    id
    participantRegistrations {
      id
    }
    organizers {
      id
      fullName
      picture
    }
    participantsRegistered
    userRegistered
  }
}

query loadUsersByStatus($allowList: [MembershipStatus!]!) {
  userWithStatus(allowList: $allowList) {
    id
    fullName
  }
}

mutation registerForEvent($eventId: ID!, $type: RegistrationType) {
  registerForEvent(eventId: $eventId, registrationType: $type) {
    id
    organizerRegistrationPossible
    participantRegistrationPossible
    organizersRegistered
    participantsRegistered
    couldBeOrganizer
    userRegistered
    organizers {
      fullName
    }
  }
}

query eventList($after: DateTime) {
  events(after: $after) {
    id
    title
    icon
    start
    freeParticipantSpots
    organizerLimit
    organizersRegistered
    couldBeOrganizer
    publicationState
    registrationMode
    userRegistered
    userIsOrganizer
  }
}
