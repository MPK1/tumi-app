### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
@see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt
"""
scalar BigInt

"""The `Byte` scalar type represents byte value as a Buffer"""
scalar Bytes

"""Input needed to create a new event template"""
input CreateEventTemplateInput {
  description: String!
  duration: Decimal!
  icon: String!
  location: String!
  locationId: String!
  organizerText: String!
  participantMail: String!
  participantText: String!
  title: String!
}

"""New user input object"""
input CreateUserInput {
  birthdate: DateTime!
  firstName: String!
  lastName: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""An arbitrary-precision Decimal type"""
scalar Decimal

"""
Template that holds all information for an event that is needed to run it
"""
type EventTemplate {
  createdAt: DateTime!
  description: String!
  duration: Decimal!
  eventInstances: [TumiEvent!]!
  finances: Json!
  icon: String!
  id: ID!
  location: String!
  locationId: String!
  organizerText: String!
  participantMail: String!
  participantText: String!
  tenant: Tenant!
  title: String!
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

enum MembershipStatus {
  ALUMNI
  FULL
  NONE
  SPONSOR
  TRIAL
}

type Mutation {
  createEventTemplate(eventTemplateInput: CreateEventTemplateInput): EventTemplate

  """Add a new user to the database"""
  registerUser(userInput: CreateUserInput): User!
}

type PhotoShare {
  createdAt: DateTime!
  event: TumiEvent!
  eventId: String!
  id: ID!
}

enum PublicationState {
  APPROVAL
  DRAFT
  PUBLIC
}

type Query {
  currentTenant: Tenant

  """Returns the logged in user if found or null"""
  currentUser: User

  """Get one event template by ID"""
  eventTemplate(id: ID!): EventTemplate

  """Query event templates for the current tenant"""
  eventTemplates: [EventTemplate!]!
  tenants: [Tenant!]!
  userById(
    """ID of the user"""
    id: ID!
  ): User
}

enum RegistrationType {
  ORGANIZER
  PARTICIPANT
}

enum Role {
  ADMIN
  USER
}

enum SubmissionItemType {
  DATE
  FILE
  NUMBER
  RATING
  TEXT
}

enum SubmissionTime {
  AFTER
  BEFORE
  DURING
  REGISTRATION
}

"""One Tenant of the app, most likely an ESN section"""
type Tenant {
  createdAt: DateTime!
  id: ID!
  name: String!
  shortName: String!
}

"""Actual instande of an TumiEventbased on a template"""
type TumiEvent {
  createdAt: DateTime!
  description: String!
  end: DateTime!
  eventTemplate: EventTemplate!
  eventTemplateId: String!
  icon: String!
  id: ID!
  location: String!
  organizerText: String!
  participantMail: String!
  participantText: String!
  photoShare: PhotoShare
  publicationState: PublicationState!
  start: DateTime!
  title: String!
}

"""One User of the app"""
type User {
  """Id from auth0 for this user"""
  authId: String!
  birthdate: DateTime!
  createdAt: DateTime!
  firstName: String!

  """Concatenated name of the user"""
  fullName: String!
  id: ID!
  lastName: String!
}
